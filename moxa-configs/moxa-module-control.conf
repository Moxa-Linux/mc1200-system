#
# Config file version
#
# shellcheck disable=2034
CONFIG_VERSION=1.3.0

#
# Platform configuration for modules
#
NUM_OF_MODULE_SLOTS=2
MODULE_SLOT_1_SYSPATHS=(
    "/sys/devices/pci0000:00/0000:00:14.0/usb1/1-4"
)
MODULE_SLOT_2_SYSPATHS=(
    "/sys/devices/pci0000:00/0000:00:14.0/usb1/1-5"
)

MODULE_GPIO_BASE=448
# GPIO defination for slot 1
MODULE_SLOT_1_PWR_SEL=$((MODULE_GPIO_BASE + 8*1 + 7))
MODULE_SLOT_1_PWR=$((MODULE_GPIO_BASE + 8*7 + 1))
MODULE_SLOT_1_RST=$((MODULE_GPIO_BASE + 8*3 + 1))
MODULE_SLOT_1_SIM=$((MODULE_GPIO_BASE + 8*7 + 0))

# GPIO defination for slot 2
MODULE_SLOT_2_PWR_SEL=$((MODULE_GPIO_BASE + 8*5 + 7))
MODULE_SLOT_2_PWR=$((MODULE_GPIO_BASE + 8*7 + 3))
MODULE_SLOT_2_RST=$((MODULE_GPIO_BASE + 8*3 + 6))
MODULE_SLOT_2_SIM=$((MODULE_GPIO_BASE + 8*7 + 2))

#
# Common functions
#
gpio_direction() {
    local gpio=${1}
    echo "/sys/class/gpio/gpio${gpio}/direction"
}

gpio_value() {
    local gpio=${1}
    echo "/sys/class/gpio/gpio${gpio}/value"
}

gpio_request() {
    local gpio=${1}

    if [ ! -e "/sys/class/gpio/gpio${gpio}" ]; then
        echo "${gpio}" > /sys/class/gpio/export
    fi
}

gpio_set_value() {
    local gpio=${1}
    local value=${2}

    gpio_request "${gpio}"
    echo "${value}" > "$(gpio_value "${gpio}")"
}

gpio_get_value() {
    local gpio=${1}
    local value=${2}

    gpio_request "${gpio}"
    cat "$(gpio_value "${gpio}")"
}

gpio_direction_output() {
    local gpio=${1}
    local value=${2}

    gpio_request "${gpio}"
    echo "out" > "$(gpio_direction "${gpio}")"
    gpio_set_value "${gpio}" "${value}"
}

gpio_direction_input() {
    local gpio=${1}

    gpio_request "${gpio}"
    echo "in" > "$(gpio_direction "${gpio}")"
}

#
# mx-module-ctl interfaces
#
module_power_on() {
    local slot="${1}"

    if [ "${slot}" -eq 1 ]; then
        gpio_direction_output "${MODULE_SLOT_1_PWR}" 1
    elif [ "${slot}" -eq 2 ]; then
        gpio_direction_output "${MODULE_SLOT_2_PWR}" 1
    fi
}

module_power_off() {
    local slot="${1}"

    if [ "${slot}" -eq 1 ]; then
        gpio_direction_output "${MODULE_SLOT_1_PWR}" 0
    elif [ "${slot}" -eq 2 ]; then
        gpio_direction_output "${MODULE_SLOT_2_PWR}" 0
    fi
}

module_reset_on() {
    local slot="${1}"

    if [ "${slot}" -eq 1 ]; then
	gpio_direction_output "${MODULE_SLOT_1_RST}" 1
    elif [ "${slot}" -eq 2 ]; then
	gpio_direction_output "${MODULE_SLOT_2_RST}" 1
    fi
}

module_reset_off() {
    local slot="${1}"

    if [ "${slot}" -eq 1 ]; then
	gpio_direction_output "${MODULE_SLOT_1_RST}" 0
    elif [ "${slot}" -eq 2 ]; then
	gpio_direction_output "${MODULE_SLOT_2_RST}" 0
    fi
}

module_switch_sim() {
    local slot=${1}
    local sim=${2}

    if [ "${slot}" -eq 1 ]; then
        if [ "${sim}" -eq 2 ]; then
            gpio_direction_output "${MODULE_SLOT_1_SIM}" 0
        elif [ "${sim}" -eq 1 ]; then
            gpio_direction_output "${MODULE_SLOT_1_SIM}" 1
        else
            echo "Unknown SIM ID '${sim}'"
        fi
    elif [ "${slot}" -eq 2 ]; then
        if [ "${sim}" -eq 2 ]; then
            gpio_direction_output "${MODULE_SLOT_2_SIM}" 0
        elif [ "${sim}" -eq 1 ]; then
            gpio_direction_output "${MODULE_SLOT_2_SIM}" 1
        else
            echo "Unknown SIM ID '${sim}'"
        fi
    else
        echo "Unknown SLOT '${slot}'"
    fi
}

#
# moxa-module-control.service interfaces
#
module_service_start() {
    module_power_on 1
    module_power_on 2
    module_switch_sim 1 1
    module_switch_sim 2 1
}
