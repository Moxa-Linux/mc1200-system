#
# Config file version
#
CONFIG_VERSION=1.3.0

#
# Platform configuration for modules
#
NUM_OF_MODULE_SLOTS=2
MODULE_SLOT_1_SYSPATHS=(
	"/sys/devices/pci0000:00/0000:00:14.0/usb1/1-4"
)
MODULE_SLOT_2_SYSPATHS=(
	"/sys/devices/pci0000:00/0000:00:14.0/usb1/1-5"
)

#
# Common functions
#
gpio_request() {
	local gpio=${1}

	if [ ! -e "/sys/class/gpio/gpio${gpio}" ]; then
		echo "${gpio}" > /sys/class/gpio/export
	fi
}

gpio_set_value() {
	local gpio=${1}
	local value=${2}

	gpio_request "${gpio}"
	case "${value}" in
	0)
		echo "low" > "/sys/class/gpio/gpio${gpio}/direction"
	;;
	1)
		echo "high" > "/sys/class/gpio/gpio${gpio}/direction"
	;;
	esac
}

gpio_get_value() {
	local gpio=${1}

	gpio_request "${gpio}"
	cat "/sys/class/gpio/gpio${gpio}/value"
}

not_support() {
	echo "Operation not supported"
}

is_wifi() {
	local gpio=${1}

	if [ "$(gpio_get_value "${gpio}")" -eq 0 ]; then
		not_support
	fi
}

gp() {
	base=448
	tens=$(($1 / 10))
	units=$(($1 % 10))
	echo $((base + 8 * (tens-1) + units))
}

# GPIO definition for module slot 1
MODULE_SLOT_1_FUNC_SEL=$(gp 27)
MODULE_SLOT_1_PWR=$(gp 81)
MODULE_SLOT_1_RST=$(gp 41)
MODULE_SLOT_1_SIM=$(gp 80)

# GPIO definition for module slot 2
MODULE_SLOT_2_FUNC_SEL=$(gp 67)
MODULE_SLOT_2_PWR=$(gp 83)
MODULE_SLOT_2_RST=$(gp 46)
MODULE_SLOT_2_SIM=$(gp 82)

#
# mx-module-ctl interfaces
#
# $1 module slot
module_power_on() (
	fs="MODULE_SLOT_${1}_FUNC_SEL"
	pwr="MODULE_SLOT_${1}_PWR"

	if [ -z "${!fs}" ] || [ -z "${!pwr}" ]
	then
		return 1
	fi

	is_wifi "${!fs}"
	gpio_set_value "${!pwr}" 1
)

# $1 module slot
module_power_off() (
	fs="MODULE_SLOT_${1}_FUNC_SEL"
	pwr="MODULE_SLOT_${1}_PWR"

	if [ -z "${!fs}" ] || [ -z "${!pwr}" ]
	then
		return 1
	fi

	is_wifi "${!fs}"
	gpio_set_value "${!pwr}" 0
)

# $1 module slot
module_reset_on() (
	fs="MODULE_SLOT_${1}_FUNC_SEL"
	rst="MODULE_SLOT_${1}_RST"

	if [ -z "${!fs}" ] || [ -z "${!rst}" ]
	then
		return 1
	fi

	is_wifi "${!fs}"
	gpio_set_value "${!rst}" 1
)

# $1 module slot
module_reset_off() (
	fs="MODULE_SLOT_${1}_FUNC_SEL"
	rst="MODULE_SLOT_${1}_RST"

	if [ -z "${!fs}" ] || [ -z "${!rst}" ]
	then
		return 1
	fi

	is_wifi "${!fs}"
	gpio_set_value "${!rst}" 0
)

# $1 module slot
# $2 sim slot
module_switch_sim() {
	ss="MODULE_SLOT_${1}_SIM"
	sim="${2}"

	if [ -z "${!ss}" ]
	then
		echo "Unknown SIM ID '${sim}'"
		return 1
	fi

	case "${sim}" in
	1)
		gpio_set_value "${!ss}" 1
	;;
	2)
		gpio_set_value "${!ss}" 0
	;;
	esac
}

# $1 module slot
module_power_status() {
	fs="MODULE_SLOT_${1}_FUNC_SEL"
	pwr="MODULE_SLOT_${1}_PWR"

	if [ -z "${!fs}" ] || [ -z "${!pwr}" ]
	then
		return 1
	fi

	is_wifi "${!fs}"
	gpio_get_value "${!pwr}"
}

#
# moxa-module-control.service interfaces
#
module_service_start() {
	module_switch_sim 1 1
	module_switch_sim 2 1

	module_reset_on 1
	module_reset_on 2

	sleep 1

	module_power_on 1
	module_power_on 2

}
